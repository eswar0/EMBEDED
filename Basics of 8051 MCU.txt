8051MCU:- it was invented by intel in 1980's by using nmos technology but using of nmos consumed more power then they re invented with using cmos technology
	* it has 4 I/O ports
	* RAM of 128 bytes and ROM of 4KB
	* it has 2 16 bit timers
	* addres bus of 16bit(bi-directional) and databus of 8bit(unidirectional)


8051 ARCHITECTURE:- 
1)CPU:- wkt it act as a brain of any kind of procesing machine, and user has no power to control the cpu
	  ,it intreprets the program stored in ROM and carries out the storage then performs it.

2)INTERRUPTS:- it is a sub routine call given by the MCU when some other program with high priority is requested for acquiring the system buses
	,then interrupt occur in current running program.They provide a method to postpone or delay the current process performs the subroutine task and then it continues the previous task
	*there are 5 sources of interrupts
	1) timer 0 overflow interrupt TF0
	2) timer 1 overflow interrupt TF1
	3) external hardware interrupt INT0
	4) external hardware interrupt INT1
	5) serial communication interrupt RI/TI
*here the timer and serial interrupts are produced internally by the MCU whereas the external interrupts are produced by the peripherals connected externally.
*after RESET all interrupts will be disabled and all interrupts can be set or cleared by a special register called INTERRUPT ENABLED(IE)
IE(interrupt enabled register):- it is used for enabling and disabling the interrupt.EA value must be set to 1 to enable the interrupt
*if EA is 0 then no interrupt is there and if EA is 1 then interrupt is individually enabled by setting its enable bit.
INTERRUPT PRIORITY REGISTER(IP):- it is used to change the priority levels of the interrupts by changing the individual bit.
if  IP register is not programmed then MCU executes its predefined order i.e INT0,TF0,INT1,TF1,SI
INTERRUPT PROGRAMMING IN 8051:-
	1) Timer Interrupt programming:- timer 1 and timer 0 interrupts are generated by TF0 and TF1
	2) External hardware interrupt programming:- INT0 and INT1 are external interrupts and they are enabled at pins 3.2 and 3.3
	3) Serial Communication interrupt programming :- it is used when there is a need to send or recieve data.Since one bit is used for transfer interupt and receiver interrupt 
	   interrupt service routine will check these falgs for knowing the actual interrupt.

PORTS IN MCU:- there are 4 I/O ports and each port is of 8bits, and total of it has 40 pins.
	port0:- it has pins of AD0-AD7.it has 2 functions.
	1)when an external memory is used then the lower address bits are used(A0-A7),else it acts a an I/O ports.(in this case the MCU will supply internal power in order to produce logic1,there is no need to add eternal resistor.)
	2)when it acts as an output unlike other ports consisting pins with builtin pullup resistor connected its end with 5V supply. pins of this port0 has this resistor left out.( In order to apply logic 1 (5V) on this output pin, it is necessary to build an external pullup resistor.)
	
	port1:- it has pins from 1-7.it is a true I/O port and it doesnt have any alternative functions as port0,it is just configured as general I/O only,and it has built in pull up resistor.
	
	port2:- it acts as same as port0 when external memory is used but now in this case it is about higher address bits A8-A15, when no memory is added it acts like same features of port1.

	port3:- all pins here can be used as general I/O,but also they have an alternative functions, in order to use the functions you have to pass the logic1 in the appropriate pin.the pins in port3 has a pullup resistor buitin.
	        the following are the port3 pins:-
	RXD:- this serial pin is for the recieving data through the input signal.
	TXD:- this serial pin is for transfering the data through the output signal.
	INT0 and INT1 are the external hardware interrupts.
	T0 and T1 are the timer pins that can be connected with 16bit counter.
	WR:- memory write pin for writing data to external memory.
	RD:- memory read pin for reading data from the external memory.

*some other external pins in MCU:-
	RESET:- pin9, it is used for reseting the current running program.
	XTAL2 and XTAL1 :- pin 18,19 these are used for external oscillators and can be connected to quartz oscillators to provide external clock frequency.
	GND:- pin 20, ground (GND) pin for connecting the GND (negative) wire of sensors and modules used with the microcontroller.
	VCC:- pin40 is used for supply voltage connecting 5V.
	PSEN:- program store enable, pin29. it is used for reading the external memroy.
	ALE:- address latch enable, pin 30.it us used for distinguishing the address of multiple memories.
	EA:- external access, pin 31.it is used for enabling and disbaling the external memory interfacing.


INTERNAL RAM ORGANIZATION OF 8051:- we know that RAM is volatile and it is just a temporary memory.
 the 128 byte memroy ram is divided into 3 sections basically.
	WORKING REGISTERS:- there are 4 bank registers here each banck register is having 8 register bundle, and mainly they are used for storing 8 bit and more than it.(32 bytes 00h to 1Fh)
	BIT ADDRESSABLE :- if you want to store a single bit instead of wasting 8bits by storing it in register bank you can store it here and you access it by using the memory location of it.(16bytes 20h to 2Fh).
	GENERAL PURPOSE RAM :- it used for any purpose storage (80 bytes 30h to 7Fh).
	


PULL UP RESISTOR:- it is connected between input and supply voltage, the voltage supply is connected directly to the supply so if we dont use any resistor when the switch is on there is a chance of system damage due to excess power 
	             so to pass the voltage in small amount we use pull up resistor and also we use it to control the digital input.it also pull the state from draining to floating.
PULL DOWN RESISTOR :- it is connected between input and ground.it is very useful when there is no active signal.when the switch is left floating then the pin connected to it will be left floating
	              but a pull-down resistor ensures that the pin or node remains at a known low voltage level until the switch is closed.


16X2 LCD DISPLAY:- it means an lcd display can display 16characters in one line and there are 2 lines in that display.
	*each character is displayed in 5X7 matrix
	*lcd has two registers in it.command registers store the command given to lcd and data register stores the data to be displayed on lcd.
PINS OF LCD:- 
VCC:- 5v of power supply
VSS:- ground
VEE:- used to adjust the contrast of lcd(background light of lcd).and it is connect to 10K ohm resistor.
RS:- (connected to port P3.5) register select if RS=0 then command register is selected(it allow user to send command to clear display).
	               if RS=1 then data register is selected(it stores the data to be displayed on the lcd).
R/W-(connected to port P3.4) read/write.if R/W=0 then writing on lcd takesplace.
	         if R/W=1 then reading from lcd takesplace.
E-(connected to port P3.3) enable, it is used by lcd to latch the information on the data bus.
DB0-DB7:- data bus pins connected with p1.0 - p1.7(in case user want to read data and write data it takes place in data bus).
	it is 8bit and birectional and used to send data to lcd and read data from lcd.


**in 16X2 LCD display 4bit there will be only 4data bus pins connected to the microcontroller and remaining 4pins are left empty.

interfacing of 4X4 matrix with 8051:-
**in this all columns are inputs and all rows are outputs.
* it has 4 coloums and 4 rows and each column is connected with supply voltage having 4.7k ohm resistor in between.
*initially columns have all 1's and rows have all 0's.
*if any key is pressed the particular column of the key gets shorted and turns to 0(now we know the column).
*now to find the row of the particular key we will check the logic from first row(i.e we'll make the checking row 0 and remaining rows 1).
*we will check it one by one row and in which row the key is pressed we can know the row such that column is already 1 and row is 0 by this we can finally know which key is pressed.


TIMER/COUNTER:- timer/counter has 2 registers each of 16bit (timer/counter 0 and timer/counter 1).
	TIMER:- A timer is a specialized type of clock which is used to measure time intervals.it is used to generate time delay.
	The register incremented for every machine cycle.and A timer uses the frequency of the internal clock, and generates delay.
	the clock is internal crystal frequency of 8051 mcu.
	COUNTER:- A counter is a device that stores (and sometimes displays) the number of times a particular event or process occurred, with respect to a clock signal.
	 It is used to count the events happening outside the microcontroller.(EXAMPLE:- it is used to count the number of people passing from a signal).
*since 8051 is 8bit architecture each 16bit registor is accessed as two separate registers as lower byte and higher byte.
TIMER0 register:- it is a 16bit register in which we represent TL0 as lower bit and TH0 as higher bit.
TIMER1 register:- it is a 16bit register in which we represent TL1 as lower bit and TH1 as higher bit.

TMOD REGISTER:- timermode register is an 8bit register used to configure the operating mode of timers.it is divided into two 4bit fields one for timer0 and another for timer1.
	,each of these bits has 2bits to specify mode of the timer.(if gate is 0 then we can start and stop the software timer and if gate is 1 then we can perform hardware timer).
TCON REGISTER:- timercontrol register is an 8bit register used to control the operations of the timer.the upper 4bits are responsible for timer/counter and lower 4bits for interrupts.
	*the bits in tcon are used to start and stop the timer,and to set the interupts when the timer overflows.

	okokok





